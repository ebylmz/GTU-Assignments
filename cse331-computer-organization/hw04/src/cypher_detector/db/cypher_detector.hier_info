|cypher_detector
wr_cypher_block[0] << datapath:d0.wr_cypher_block
wr_cypher_block[1] << datapath:d0.wr_cypher_block
wr_cypher_block[2] << datapath:d0.wr_cypher_block
wr_cypher_block[3] << datapath:d0.wr_cypher_block
current_state[0] << current_state[0].DB_MAX_OUTPUT_PORT_TYPE
current_state[1] << current_state[1].DB_MAX_OUTPUT_PORT_TYPE
current_state[2] << control:c0.current_state
protect_state << protect_state.DB_MAX_OUTPUT_PORT_TYPE
detected << datapath:d0.detected
matched << matched.DB_MAX_OUTPUT_PORT_TYPE
sum[0] << datapath:d0.sum
sum[1] << datapath:d0.sum
sum[2] << datapath:d0.sum
sum[3] << datapath:d0.sum
sum[4] << datapath:d0.sum
sum[5] << datapath:d0.sum
sum[6] << datapath:d0.sum
sum[7] << datapath:d0.sum
cypher[0] => cypher[0].IN1
cypher[1] => cypher[1].IN1
cypher[2] => cypher[2].IN1
cypher[3] => cypher[3].IN1
cypher[4] => cypher[4].IN1
cypher[5] => cypher[5].IN1
cypher[6] => cypher[6].IN1
cypher[7] => cypher[7].IN1
cypher[8] => cypher[8].IN1
cypher[9] => cypher[9].IN1
cypher[10] => cypher[10].IN1
cypher[11] => cypher[11].IN1
cypher[12] => cypher[12].IN1
cypher[13] => cypher[13].IN1
cypher[14] => cypher[14].IN1
cypher[15] => cypher[15].IN1
stream[0] => stream[0].IN1
stream[1] => stream[1].IN1
stream[2] => stream[2].IN1
stream[3] => stream[3].IN1
read => read.IN1
reset => reset.IN1
clock => clock.IN2


|cypher_detector|datapath:d0
detected <= detected.DB_MAX_OUTPUT_PORT_TYPE
matched <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
protect_state <= protect_state.DB_MAX_OUTPUT_PORT_TYPE
wr_cypher_block[0] <= wr_cypher_block.DB_MAX_OUTPUT_PORT_TYPE
wr_cypher_block[1] <= wr_cypher_block.DB_MAX_OUTPUT_PORT_TYPE
wr_cypher_block[2] <= wr_cypher_block.DB_MAX_OUTPUT_PORT_TYPE
wr_cypher_block[3] <= wr_cypher_block.DB_MAX_OUTPUT_PORT_TYPE
sum[0] <= reg_sum[0].DB_MAX_OUTPUT_PORT_TYPE
sum[1] <= reg_sum[1].DB_MAX_OUTPUT_PORT_TYPE
sum[2] <= reg_sum[2].DB_MAX_OUTPUT_PORT_TYPE
sum[3] <= reg_sum[3].DB_MAX_OUTPUT_PORT_TYPE
sum[4] <= reg_sum[4].DB_MAX_OUTPUT_PORT_TYPE
sum[5] <= reg_sum[5].DB_MAX_OUTPUT_PORT_TYPE
sum[6] <= reg_sum[6].DB_MAX_OUTPUT_PORT_TYPE
sum[7] <= reg_sum[7].DB_MAX_OUTPUT_PORT_TYPE
cypher[0] => reg_cypher[0].DATAIN
cypher[1] => reg_cypher[1].DATAIN
cypher[2] => reg_cypher[2].DATAIN
cypher[3] => reg_cypher[3].DATAIN
cypher[4] => reg_cypher[4].DATAIN
cypher[5] => reg_cypher[5].DATAIN
cypher[6] => reg_cypher[6].DATAIN
cypher[7] => reg_cypher[7].DATAIN
cypher[8] => reg_cypher[8].DATAIN
cypher[9] => reg_cypher[9].DATAIN
cypher[10] => reg_cypher[10].DATAIN
cypher[11] => reg_cypher[11].DATAIN
cypher[12] => reg_cypher[12].DATAIN
cypher[13] => reg_cypher[13].DATAIN
cypher[14] => reg_cypher[14].DATAIN
cypher[15] => reg_cypher[15].DATAIN
stream[0] => Add0.IN8
stream[0] => Equal0.IN7
stream[0] => Equal3.IN3
stream[1] => Add0.IN7
stream[1] => Equal0.IN6
stream[1] => Equal3.IN2
stream[2] => Add0.IN6
stream[2] => Equal0.IN5
stream[2] => Equal3.IN1
stream[3] => Add0.IN5
stream[3] => Equal0.IN4
stream[3] => Equal3.IN0
current_state[0] => wr_cypher_block1[3].OUTPUTSELECT
current_state[0] => wr_cypher_block1[2].OUTPUTSELECT
current_state[0] => wr_cypher_block1[1].OUTPUTSELECT
current_state[0] => wr_cypher_block1[0].OUTPUTSELECT
current_state[0] => wr_cypher_block2[3].OUTPUTSELECT
current_state[0] => wr_cypher_block2[2].OUTPUTSELECT
current_state[0] => wr_cypher_block2[1].OUTPUTSELECT
current_state[0] => wr_cypher_block2[0].OUTPUTSELECT
current_state[0] => Equal1.IN1
current_state[0] => Equal2.IN0
current_state[1] => wr_cypher_block.OUTPUTSELECT
current_state[1] => wr_cypher_block.OUTPUTSELECT
current_state[1] => wr_cypher_block.OUTPUTSELECT
current_state[1] => wr_cypher_block.OUTPUTSELECT
current_state[1] => Equal1.IN0
current_state[1] => Equal2.IN1
wri_reg_cypher => reg_cypher[0].ENA
wri_reg_cypher => reg_cypher[1].ENA
wri_reg_cypher => reg_cypher[2].ENA
wri_reg_cypher => reg_cypher[3].ENA
wri_reg_cypher => reg_cypher[4].ENA
wri_reg_cypher => reg_cypher[5].ENA
wri_reg_cypher => reg_cypher[6].ENA
wri_reg_cypher => reg_cypher[7].ENA
wri_reg_cypher => reg_cypher[8].ENA
wri_reg_cypher => reg_cypher[9].ENA
wri_reg_cypher => reg_cypher[10].ENA
wri_reg_cypher => reg_cypher[11].ENA
wri_reg_cypher => reg_cypher[12].ENA
wri_reg_cypher => reg_cypher[13].ENA
wri_reg_cypher => reg_cypher[14].ENA
wri_reg_cypher => reg_cypher[15].ENA
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
wri_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clr_reg_sum => reg_sum.OUTPUTSELECT
clock => reg_sum[0].CLK
clock => reg_sum[1].CLK
clock => reg_sum[2].CLK
clock => reg_sum[3].CLK
clock => reg_sum[4].CLK
clock => reg_sum[5].CLK
clock => reg_sum[6].CLK
clock => reg_sum[7].CLK
clock => reg_cypher[0].CLK
clock => reg_cypher[1].CLK
clock => reg_cypher[2].CLK
clock => reg_cypher[3].CLK
clock => reg_cypher[4].CLK
clock => reg_cypher[5].CLK
clock => reg_cypher[6].CLK
clock => reg_cypher[7].CLK
clock => reg_cypher[8].CLK
clock => reg_cypher[9].CLK
clock => reg_cypher[10].CLK
clock => reg_cypher[11].CLK
clock => reg_cypher[12].CLK
clock => reg_cypher[13].CLK
clock => reg_cypher[14].CLK
clock => reg_cypher[15].CLK


|cypher_detector|control:c0
current_state[0] <= current_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[1] <= current_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[2] <= current_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wri_reg_cypher <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
wri_reg_sum <= read.DB_MAX_OUTPUT_PORT_TYPE
clr_reg_sum <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
matched => next_state.OUTPUTSELECT
matched => Mux2.IN9
matched => Mux1.IN9
matched => Mux1.IN10
matched => Mux2.IN10
matched => Mux0.IN10
protect_state => next_state.DATAA
read => wri_reg_sum.DATAIN
read => next_state.OUTPUTSELECT
read => next_state.OUTPUTSELECT
read => next_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
clock => next_state[0].CLK
clock => next_state[1].CLK
clock => next_state[2].CLK
clock => current_state[0]~reg0.CLK
clock => current_state[1]~reg0.CLK
clock => current_state[2]~reg0.CLK


